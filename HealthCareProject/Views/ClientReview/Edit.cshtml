@model HealthCareProject.Models.ClientReview


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Edit Review</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)


    <div class="form-group">
        <div class="col-md-10">
            <label asp-for="ClientId" class="control-label"></label>
            <select asp-for="ClientId" class="form-control"
                    asp-items="@(new SelectList(ViewBag.ListofClientId, "ClientId", "FirstName"))"></select>
            <span asp-validation-for="ClientId" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <label asp-for="DoctorId" class="control-label"></label>
            <select asp-for="DoctorId" class="form-control"
                    asp-items="@(new SelectList(ViewBag.ListofDoctorId, "DoctorId", "FirstName"))"></select>
            <span asp-validation-for="DoctorId" class="text-danger"></span>
        </div>
    </div>

    

    <div class="form-group">
        @Html.LabelFor(model => model.WaitTimeRating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WaitTimeRating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WaitTimeRating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DoctorRating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DoctorRating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DoctorRating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Review, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Review, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsDoctorRecommended, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsDoctorRecommended, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsDoctorRecommended, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReviewDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReviewDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReviewDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            <button class="btn btn-warning"> @Html.ActionLink("Back to List", "Index")</button>
        </div>
    </div>

    <br />
    <br />
</div>
}




<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>